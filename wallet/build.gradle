apply plugin: 'com.android.application'
apply plugin: 'androidsvgdrawable'

configurations {
    all*.exclude group: 'com.google.android', module: 'android'
    all*.exclude group: 'androidx.legacy', module: 'legacy-support-core-ui'
    all*.exclude group: 'androidx.legacy', module: 'legacy-support-core-utils'
}

dependencies {
    compile project(':integration-android')
    compile 'androidx.annotation:annotation:1.0.2'
    compile 'androidx.core:core:1.0.2'
    compile 'androidx.fragment:fragment:1.0.0'
    compile 'androidx.recyclerview:recyclerview:1.0.0'
    compile 'androidx.cardview:cardview:1.0.0'
    compile 'androidx.coordinatorlayout:coordinatorlayout:1.0.0'
    compile 'androidx.viewpager:viewpager:1.0.0'
    compile 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    compile 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    compile "androidx.sqlite:sqlite:2.0.1"
    compile "androidx.room:room-runtime:2.0.0"
    annotationProcessor "androidx.room:room-compiler:2.0.0"
    compile 'com.google.protobuf:protobuf-java:3.5.1'
    compile 'com.google.guava:guava:27.1-android'
    compile 'com.google.zxing:core:3.3.3'
    compile 'com.squareup.okhttp3:okhttp:3.12.3'
    compile 'com.squareup.okhttp3:logging-interceptor:3.12.3'
    compile 'com.squareup.moshi:moshi:1.6.0'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'com.github.tony19:logback-android:1.3.0-2'
    testCompile 'junit:junit:4.12'
    implementation files('../libs/tdcoinj-core-0.16-SNAPSHOT.jar')
    implementation 'org.bouncycastle:bcprov-jdk15on:1.62'
}

ext {
    archivesBaseName = 'tdcoin-wallet'
}

android {
    compileSdkVersion 28
    buildToolsVersion '27.0.3'

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }

    defaultConfig {
        applicationId 'de.schildbach.tdcwallet'
        generatedDensities = ['hdpi', 'xhdpi']

        dexOptions {
            preDexLibraries false
        }

        ndk {
            abiFilters 'armeabi-v7a', 'x86'
        }

        externalNativeBuild {
            cmake {
                cFlags '-DHAVE_CONFIG_H'
            }
        }
        vectorDrawables.useSupportLibrary = true
        minSdkVersion 21
        maxSdkVersion 29
        signingConfig signingConfigs.debug
        targetSdkVersion 28
    }

    buildTypes {
        all {
            minifyEnabled true
            shrinkResources true
            proguardFile 'proguard.cfg'
        }
        debug {
            debuggable true
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
        test {
            java.srcDirs = ['test']
            resources.srcDirs = ['test']
        }
    }

    externalNativeBuild {
        cmake {
            path 'cpp/CMakeLists.txt'
        }
    }

    packagingOptions {
        exclude 'META-INF/*.version'
        exclude 'META-INF/proguard/**'
        exclude 'lib/x86_64/darwin/libscrypt.dylib'
        exclude 'okhttp3/internal/publicsuffix/publicsuffixes.gz'
        exclude 'org/tdcoinj/crypto/mnemonic/wordlist/english.txt'
        exclude 'org/tdcoinj/crypto/cacerts'
        exclude 'org.tdcoin.production.checkpoints.txt'
        exclude 'org.tdcoin.test.checkpoints.txt'
    }
}

task svgToPngMipmap(type: fr.avianey.androidsvgdrawable.gradle.SvgDrawableTask) {
    from = files('graphics/mipmap')
    to = file('res')
    targetedDensities = ['hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi']
    outputFormat = 'PNG'
    outputType = 'mipmap'
}
